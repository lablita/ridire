{"name":"Ridire-cpi","tagline":"Dynamic Italian Language Resources. Creation, deployment and maintenance of a web-based infrastructure aimed at consolidating the teaching of Italian worldwide.","body":"RIDIRE Installation Manual\r\n======\r\n\r\nhttp://www.ridire.it\r\n\r\nhttp://lablita.dit.unifi.it/projects/RIDIRE\r\n\r\n\r\nJava\r\n----\r\n\r\nInstall Java version \\>=1.5\r\n\r\nAdjust `JAVA_HOME` environment variable accordingly\r\n\r\nJBoss\r\n-----\r\n\r\nhttp://www.jboss.org/jbossas/downloads\r\n\r\nInstall JBoss version=5.1.0GA\r\n\r\nMake sure default listening port (8080) it’s not already used. If so,\r\nchange\r\n`JBOSS_INSTALL/server/default/conf/bindingservice.beans/META-INF/bindings-jboss-beans.xml`\r\n\r\nfrom these\r\n\r\n```xml\r\n  ....\r\n  <constructor>\r\n  <!-- The name of the set of bindings to use for this server -->  \r\n  <parameter>${jboss.service.binding.set:ports-default}</parameter>\r\n  <!-- The binding sets -->  \r\n  <parameter>\r\n  ....\r\n```\r\n\r\n\r\nto these\r\n\r\n```xml\r\n  ....\r\n  <constructor>\r\n  <!-- The name of the set of bindings to use for this server -->  \r\n  <parameter>${jboss.service.binding.set:ports-01}</parameter>\r\n  <!-- The binding sets --> \r\n  <parameter>\r\n  ....\r\n```\r\n\r\n\r\nThis change will shift all ports by 100. So the HTTP listening port will\r\nbe 8180.\r\n\r\nMake also sure the system has a high limit on maximum open file (e.g.\r\nubuntu’s default 1024 is often too small).\r\n\r\nIf you are not a JBoss expert, go to\r\n`JBOSS_INSTALL/server/default/deploy` and remove the directory\r\n`admin-console.war`, to avoid a well-known security issue.\r\n\r\n#### Temporary directory\r\n\r\nRIDIRE will need of a quite big amount of space for temporary files.\r\nSometimes /tmp (the default temporary directory) is bound to a small\r\npartition. If so, create a dedicated temporary folder (something like\r\n`~/ridire_tmp/`) and modify `JBOSS_INSTALL/bin/run.conf` adding\r\n`-Djava.io.tmpdir=/home/drwolf/ridire_tmp` at the end of `JAVA_OPTS`.\r\n\r\nMySQL\r\n-----\r\n\r\nInstall MySQL version \\> 5.0\r\n\r\nCreate a database and assign all privileges on it to a user.\r\n```\r\nmysql> create database ridire default character set utf8 default collate utf8_bin;\r\n\r\nmysql> grant all privileges on ridire.* to 'ridire'@'IPADDRESS' identified by 'secret';\r\n```\r\n\r\nRIDIRE EAR\r\n----------\r\n\r\nMove to `JBOSS_INSTALL/server/default/deploy` and unpack\r\nit.drwolf.ridire-ear.zip file\r\n\r\nCopy `it.drwolf.ridire-ds.xml` in `JBOSS\\_INSTALL/server/default/deploy`\r\n(not in the folder created by unzipping the package).\r\n\r\nChange `ds.xml` file accordingly to the parameters you have set for the\r\nDB.\r\n\r\nNot shipped libraries\r\n---------------------\r\n\r\nSome of the programming libraries needed by RIDIRE cannot be shipped in\r\nthe same package for licences reasons. You have to download them by\r\nyourself and place in\r\n`JBOSS_INSTALL/server/default/deploy/it.drwolf.ridire-ear.ear/lib/`\r\n\r\n1.  MySQL JDBC connector\r\n    [http://dev.mysql.com/downloads/connector/j/](http://dev.mysql.com/downloads/connector/j/)\r\n2.  iText\r\n    [http://sourceforge.net/projects/itext/](http://sourceforge.net/projects/itext/)\r\n\r\nFirst run\r\n---------\r\n\r\nMove to `JBOSS_INSTALL/bin`\r\n\r\nRun\r\n\r\n`$ ./run.sh -b 0.0.0.0`\r\n\r\nThe option `-b` makes JBoss accept connection from every IP, not just\r\nlocalhost (this could be a security issue, be aware).\r\n\r\nThe first run, beside checking if the first installation is correct,\r\ncreates needed tables with default parameters on the DB.\r\n\r\nWeb interface is reachable at\r\n[http://SERVER\\_IP:8080/it.drwolf.ridire/](http://server_ip:8080/it.drwolf.ridire/)\r\n\r\nIf you see RIDIRE’s logo, the first run went fine.\r\n\r\nThe default user administrator has the following parameters:\r\n```\r\nusername: admin\r\npassword: changeme\r\n```\r\nYou may want to change it modifying the corresponding record in User\r\ntable.\r\n\r\nParameters\r\n----------\r\n\r\nParameters are set in Parameter and CommandParameter tables. They are\r\njust key-value records; key name should have a quite explanatory name,\r\nanyway they will be discussed later.\r\n\r\nTo make RIDIRE aware of any change in parameters, JBoss must be\r\nrestarted.\r\n\r\nStopping and restarting\r\n-----------------------\r\n\r\nThe correct way to stop JBoss5 is:\r\n```\r\n$ JBOSS_INSTALL/bin/shutdown.sh -S\r\n```\r\nThis command works if JBoss was installed on the default port (`8080`).\r\nOtherwise you have to pass other parameters to the shutdown script. E.g.\r\nif JBoss’ ports are shifted by 100, the right command is\r\n```\r\n$ JBOSS_INSTALL/bin/shutdown.sh -s jnp://localhost:1199\r\n```\r\nHERITRIX\r\n--------\r\n\r\nTo install the crawler, unpack the bundle heritrix-RIDIRE.tar.gz, which\r\nis a snapshot of Heritrix v. 3.1.1, with already configured profiles and\r\na custom module.\r\n\r\nTake note of the folder where you’ve unpacked the bundle and change the\r\nfollowing parameters accordingly:\r\n\r\nin `CommandParameter` table:\r\n\r\n-  `heritrix.dir`\r\n\r\nin `Parameter` table:\r\n\r\n- `jobs.dir`\r\n- `localresoruces.dir`\r\n\r\nNow the crawler is configured, but it’s not very useful, because the\r\npipeline is not installed. Without the pipeline, downloaded resources\r\nwon’t be processed and transformed in plain text and linguistic\r\ninformation won’t br extracted.\r\n\r\n### \r\n\r\nPipeline\r\n--------\r\n\r\n#### Transformation to HTML\r\n\r\nDOC, RTF, TXT conversion implementations are embedded in the\r\napplication. No configuration needed.\r\n\r\nPDF conversion needs the following configuration steps:\r\n\r\n1.  **pdftohtml** - you need to install pdftohtml version 0.40\r\n    http://pdftohtml.sourceforge.net/, based on Xpdf version 3.01.\r\n    Notice that pdftohtml version that is shipped in ubuntu’s package is\r\n    not compatible. Change pdftohtml.bin CommandParameter accordingly.\r\n2.  **PdfCleaner** - place `PdfCleaner.jar` in a folder of your choice. Change\r\n    `pdfcleaner.jar` CommandParameter accordingly.\r\n\r\n#### HTML cleaner\r\n\r\nPlace `ridirecleaner.jar` in a folder of your choice. Change\r\nCommandParameter `ridirecleaner.jar` accordingly.\r\n\r\nTo use **Readability** you must get an API key from\r\n[www.readability.com](http://www.readability.com)/developers/api. Read\r\ncarefully http://www.readability.com/developers/terms\r\n\r\nTo configure Readability cleaning, you need to adjust the following\r\nParameters:\r\n\r\n1.  `readability.host` that must match the URL of RIDIRE application;\r\n2.  `readability.key` with the provided key\r\n\r\n**Alchemy** is an external web service too. You must obtain an API key\r\n([http://www.alchemyapi.com](http://www.alchemyapi.com)). Free API key\r\nhave a limit of 1000 calls per day. You may request a key for academic\r\nuse or a commercial one (see website for details).\r\n\r\nYou must write the key in the `alchemy.key` Parameter.\r\n\r\nChange `temp.dir` Parameter according to your system’s temporary directory\r\nof to the one you have chosen.\r\n\r\n#### Language detection\r\n\r\nIt’s embedded in the application. No configuration needed.\r\n\r\n#### Treetagger\r\n\r\nDownload and install TreeTagger following instruction on the web site\r\n[http://www.cis.uni-muenchen.de/\\~schmid/tools/TreeTagger/](http://www.cis.uni-muenchen.de/~schmid/tools/TreeTagger/)\r\n\r\nUse Marco\r\nBaroni's [Italian parameter file](http://www.cis.uni-muenchen.de/%7Eschmid/tools/TreeTagger/data/italian-par2-linux-3.1.bin.gz)\r\n\r\nModify the following CommandParameters on db:\r\n\r\n1.  `treetagger.bin`\r\n2.  `treetagger.parfile`\r\n3.  `treetaggerutf8.bin`\r\n\r\nAfter installing the pipeline RIDIRE is ready to crawl and process resources.\r\n\r\nPoS tagging is disabled in default installation. Set `pos.enabled` Parameter to true to enable it.\r\n\r\nCorpusWorkbench (CWB)\r\n---------------------\r\n\r\nRIDIRE exploits CWB to index resources and search for concordances and collocates.\r\n\r\n\r\nFollow installation instruction here:\r\n<http://cwb.sourceforge.net/download.php#cwb>\r\n\r\nCWB installation needs to be customized a little in order to cope with some tabulation problem.\r\nAfter unpacking CWB package, find directory `CWB_DIR/cwb/trunk/cqp` and inside that directory, the file `output.c`.\r\nWith your text editor change line 920:\r\n\r\n```\r\n< fprintf(rd->stream, \"\\t\");\r\n---\r\n> fprintf(rd->stream, \"@@##\");\r\n```\r\n\r\n\r\nAfter installing, update the following Parameters\r\n\r\n1.  `cqp.executable`\r\n2.  `cqp.registry`\r\n3.  `cwb.decode.executable`\r\n4.  `cwbscan.executable`\r\n\r\n#### Creating a corpus\r\n\r\nBefore building a corpus you must prepare resource files in order to be\r\nmanaged by CWB.\r\n\r\nYou can:\r\n\r\n1. use a list of job names\r\n\r\n2. use all validated jobs\r\n\r\nThis choice can be done here: <http://SERVER_IP:8080/it.drwolf.ridire/cwb.seam>\r\n\r\nWhichever choice you make, you must provide a destination directory. If you choose 2., you must provide the list of the jobs you want to put in\r\nthe corpus.\r\n\r\nThis operation creates VRT files. For performance reasons, an *inverted* corpus is also needed.\r\n\r\nThe inverted corpus is made of the same resources with inverted order.\r\nTo make these new VRT files, you must provide the directory path of the previous step and the path of a different folder where inverted VRT\r\nfiles will be placed and click on ‘Inverti VRT’ button.\r\n\r\nActual indexing is performed on the command line.\r\n\r\nChoose a corpus name (from now on: `CORPUSNAME`).\r\n```\r\n$ cwb-encode -d CWBDATADIR -F VRTDIR -R REGISTRYDIR/CORPUSNAME -c utf8 -xsB -P pos -P easypos -P lemma -S text:0+id+url+functional+semantic+jobname\r\n$ cwb-make -r REGISTRYDIR/ -V CORPUSNAME\r\n```\r\n\r\nRepeat these steps for the inverted files, placing a `INV` suffix on the `CORPUSNAME`\r\n```\r\n$ cwb-encode -d CWBDATADIRINV -F VRTDIRINV -R REGISTRYDIR/CORPUSNAMEINV -c utf8 -xsB -P pos -P easypos -P lemma -S text:0+id+url+functional+semantic+jobname\r\n$ cwb-make -r REGISTRYDIR/ -V CORPUSNAMEINV\r\n```\r\nRemember that for `cwb-make` the `-V` parameter must be uppercase.\r\n\r\nNow you can modify cqp.corpusname Parameter (just with `CORPUSNAME` in uppercase format).\r\n\r\n### Frequency lists\r\n\r\nIn order to extract collocates you must precompute frequency lists.\r\n\r\nThis is a quite time consuming operation for large corpora.\r\n\r\nGo to <http://SERVER_IP:8080/it.drwolf.ridire/cwbfrequencyList.seam> and click 'Crea Liste di Frequenza' button.\r\n\r\nThis operation updates a bunch of frequency list tables on the database.\r\n\r\nAfter the computation is complete it’s possible to extract collocates\r\nand compute sketches.\r\n\r\n### Sketches\r\n\r\nFirst choose a directory where the sketches index will be stored and\r\nchange sketch.index.location Parameter accordingly.\r\n\r\nThen you have to choose for which lemmas you want to compute sketches.\r\nBe aware that sketch computation is a very time consuming process that\r\ncan take weeks on corpora with tenths of millions of terms. Moreover\r\nterms with low frequency are likely to produce not interesting sketches.\r\nKeeping this in mind you must create 4 text files to be put in a\r\n‘working directory’ on the server, that tell the system which lemmas\r\nhave to be treated; each of these files must contain a single lemma per\r\nline:\r\n\r\n1.  nome.txt\r\n2.  aggettivo.txt\r\n3.  avverbio.txt\r\n4.  verbo.txt\r\n\r\nTo compute these files you can use, for example, CWB’s cwb-scan-corpus\r\nprogram.\r\n\r\nE.g.:\r\n```\r\n$cwb-scan-corpus -r REGISTRYDIR/ -C CORPUSNAME lemma pos=/NOUN/ | sort -nr -k 1 | cut -f2 > nome.txt\r\n\r\n$cwb-scan-corpus -r REGISTRYDIR/ -C CORPUSNAME lemma pos=/ADJ/ | sort -nr -k 1 | cut -f2 > aggettivo.txt\r\n\r\n$cwb-scan-corpus -r REGISTRYDIR/ -C CORPUSNAME lemma pos=/ADV.*/ | sort -nr -k 1 | cut -f2 > avverbio.txt\r\n\r\n$cwb-scan-corpus -r REGISTRYDIR/ -C CORPUSNAME lemma pos=/VER.*/ | sort -nr -k 1 | cut -f2\\> verbo.txt\r\n```\r\nThe commands above put all nouns in the file, even single occurrences;\r\nmaybe you should cut the file for the considerations already explained.\r\n\r\nGo to <http://SERVER_IP:8080/it.drwolf.ridire/sketchcreation.seam>\r\n\r\nwrite the working dir complete path and a number for process parameter greater than 1 and lesser than 10.\r\n\r\nProcess is a number that tells the system how many threads can be launched contemporary. Multiple threads can exploit multicore or mulitprocessor architecture on some systems. You can safely write 10 even if you are not sure how many cores you have.\r\n\r\nClick on ‘Genera sketch’ to start the process.\r\n\r\nYou will have to check once in awhile if the process is terminated by analysing JBoss logs;\r\n```\r\n$ tail -f JBOSS_INSTALL/server/default/server.log\r\n```\r\nIt may be a good idea to suspend mapping process during this phase, in\r\norder to provide more resources to the sketch creation:\r\n\r\ngo to <http://SERVER_IP:8080/it.drwolf.ridire/resourcesAdmin.seam> and click on ‘Sospendi mapping’.\r\n\r\nWhen the process is terminated go back to <http://SERVER_IP:8080/it.drwolf.ridire/sketchcreation.seam> and click on ‘Chiudi indice’ to optimize and close sketches Lucene index (now you can resume mapping, by clicking on ‘Riprendi mapping’ on resourcesAdmin page).","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}